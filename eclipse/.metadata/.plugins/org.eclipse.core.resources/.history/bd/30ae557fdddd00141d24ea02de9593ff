package ashjack.SUKReloaded2.core.util;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.filefilter.TrueFileFilter;

import ashjack.SUKReloaded2.core.SUK2Log;

public class SUK2FilePackager 
{	
	static File racesFolder = new File(SUK2IO.getSimukraftFolder("Races"));
	
	//Create Temporary Files To Be Packaged
	public static void createTemps() throws IOException
	{
		File racetmp = new File(SUK2IO.getTempFolder("Races"));
		FileUtils.copyDirectory(racesFolder, racetmp);
	}
	
	//Package Race
	public static void packageAll() throws IOException
	{
		createTemps();
		
		Collection<File> fileCollection = FileUtils.listFilesAndDirs(new File(SUK2IO.getTempFolder("Races")), TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE);
		
		File[] files = (fileCollection.toArray(new File[fileCollection.size()]));
		
		ArrayList<File> fileList = new ArrayList<File>(Arrays.asList(files));
		
		/*for(int i = 0; i<fileList.size(); i++)
		{
			fileList.set(i, new File("assets/SUK2/" + fileList.get(i).getName()));
		}*/
		
		for(int i = 0; i<fileList.size(); i++)
		{
			SUK2Log.log.info(fileList.get(i).getName());
			SUK2Log.log.info(fileList.get(i).getParent());
			
			if(fileList.get(i).getName().contains("Races"))
			{
				SUK2Log.log.info("Removing Races Folder");
				fileList.remove(i);
			}
			
			if(fileList.get(i).getParentFile().getName().contains("assets") && !fileList.get(i).isDirectory())
			{
				fileList.remove(i);
			}
		}
		
		fileList.add(new File(SUK2IO.getSimukraftFolder("__LOAD") + "/pack.mcmeta"));
		
		File raceZip = new File(SUK2IO.getTempFolder("Resources") + "/Race.zip");
		raceZip.getParentFile().mkdirs();
		raceZip.createNewFile();
		
		Packager.packZip(raceZip, fileList);
		
		new File(SUK2IO.getTempFolder()).delete();
	}
}
